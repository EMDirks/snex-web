<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>SNEX - Gamepads for Smartphones</title>
  <link href="https://fonts.googleapis.com/css?family=Jura" rel="stylesheet">
  <link href="/style.css" rel="stylesheet">
  <link href="/demo.css" rel="stylesheet">
  <link media="(max-width: 800px)" href="/mobile.css" rel="stylesheet">

  <meta name="theme-color" content="#de4d5f" />
  <meta name="viewport" content="width=device-width, user-scalable=1.0, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0">

  <meta property="og:title" content="Gamepads for Android - SNEX" />
  <meta property="og:description" content="Subscribable, on-screen gamepads for Android that emit JSON over WebRTC. Implement for your game in minutes!" />
  <meta property="og:url" content="http://snex.pomle.com/" />
  <meta property="og:image" content="http://snex.pomle.com/images/og-image.png" />

  <script src="/scripts/peer.min.js"></script>
  <script src="/scripts/game.js"></script>
  <script src="/scripts/demo.js"></script>
</head>
<body
  data-api-key="<%= api_key; %>"
  data-controllers="<%= controllers; %>"
>
  <section class="headline">
    <img src="/images/snex-logo.svg" alt="Snex" />
    <h2>Play games on the big screen with a gamepad on your Android</h2>
  </section>

  <section class="explanation">
    <ul>
      <li>
        <h2>What is it?</h2>

        <p>We provide gamepads for smart phones that emit events when interacted with. Developers can subscribe to events to control their games. Events are transmitted using <a href="http://peerjs.com/">Peer.js</a> via <a href="https://webrtc.org/">WebRTC</a>.</p>
      </li>

      <li>
        <div class="controllers">
          <div class="android">
            <img src="/controllers/snes.svg" alt="SNES" />
          </div>

          <div class="android">
            <img src="/controllers/nes.svg" alt="NES" />
          </div>
        </div>
      </li>
    </ul>
  </section>

  <section class="how">
    <h2>How does it work?</h2>

    <ul>
      <li>
        <h3>1) Include <a href="http://peerjs.com/">Peer.js</a></h3>

        <p>We depend on Peer.js to easily setup the connection between the user and your project.</p>
        <p>
          You will have to include their library on your site to use SNEX. We also recommend that you
          create your own API key with <a href="http://peerjs.com/">Peer.js</a>.
        </p>

        <code>
          <%= `<script src="http://cdn.peerjs.com/0.3/peer.min.js"></script>` %>
        </code>

        <p>
          For more details on how to use Peer.js, visit their <a href="http://peerjs.com/docs/#start">Getting Started</a> guide.
        </p>
      </li>
      <li>
        <h3>2) Create URL</h3>

        <p>
          You create a unique URL to our service with help from <a href="http://peerjs.com/">Peer.js</a>.
          The URL contains information on where to connect and what gamepad to display.
        </p>

        <code>
          var API_KEY = 'lwjd5qra8257b9';<br/>
          var peer = new Peer({key: API_KEY});<br/>
          peer.on('open', function(id) {<br/>
          &nbsp;&nbsp;var url = 'http://snex.pomle.com/nes/'<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;+ '?key=' + API_KEY<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;+ '&amp;id=' + id;<br/>
          &nbsp;&nbsp;console.info('Go to url', url);<br/>
          });
        </code>

      </li>
      <li>
        <h3>3) User loads URL</h3>

        <p>
          Give URL to the user via SMS, email, or create a short link using <a href="http://bit.ly/">Bitly</a>.

          When the user opens the URL they will see a Joypad and we will connect to your service.
        </p>
      </li>

      <li>
        <h3>4) Handle events</h3>

        <p>
          When the user interacts with the gamepad we will send messages in JSON format containing the details of the user interaction. They It's up to you what to do with them.
        </p>

        <code>
          peer.on('connection', function(conn) {<br/>
          &nbsp;&nbsp;conn.on('data', function(data) {<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;if (data.key == 'A' &amp;&amp; data.state == 1) {<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log('A was pressed');<br/>
          &nbsp;&nbsp;&nbsp;&nbsp;}<br/>
          &nbsp;&nbsp;});<br/>
          });
        </code>
      </li>
    </ul>
  </section>

  <section class="demo">
    <h2>Try it!</h2>

    <p>Use the input below to control the game or open the URL on your Android.</p>

    <div class="controller-url">
      Go to <span class="link"></span> in your smartphone.
    </div>

    <div class="game">
      <div class="screen">
        <div class="log"></div>
        <canvas width="320" height="190"></canvas>
      </div>
    </div>

    <div class="input">
      <div class="skip prev">
          <button data-skip="-1">
            <img src="/images/arrow.svg" alt="Previous" />
          </button>
      </div>

      <div class="skip next">
          <button data-skip="1">
            <img src="/images/arrow.svg" alt="Next" />
          </button>
      </div>

      <div class="overlay">
        <div class="controllers">
          <template class="controller">
            <div class="controller hidden">
              <div class="window">
                <iframe src=""></iframe>
              </div>
            </div>
          </template>

        </div>
      </div>

    </div>
  </section>

  <footer>
    Created by <a href="https://github.com/pomle">@pomle</a> &amp; <a href="http://www.ethandirks.com">@ethan</a>
  </footer>
</body>
</html>
